-- MetaMystic Database Schema

-- Schema: public

-- Table: admin

CREATE TABLE admin (
	id SERIAL NOT NULL, 
	username VARCHAR(64) NOT NULL, 
	email VARCHAR(120) NOT NULL, 
	password_hash VARCHAR(256) NOT NULL, 
	CONSTRAINT admin_pkey PRIMARY KEY (id), 
	CONSTRAINT admin_email_key UNIQUE (email), 
	CONSTRAINT admin_username_key UNIQUE (username)
)

;

-- Primary Key for admin: id

-- Indexes for admin:
--   admin_email_key: email (unique: True)
--   admin_username_key: username (unique: True)


-- Table: blog_post

CREATE TABLE blog_post (
	id SERIAL NOT NULL, 
	title VARCHAR(120) NOT NULL, 
	slug VARCHAR(120) NOT NULL, 
	content TEXT NOT NULL, 
	summary VARCHAR(200), 
	image_url VARCHAR(256), 
	published BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT blog_post_pkey PRIMARY KEY (id), 
	CONSTRAINT blog_post_slug_key UNIQUE (slug)
)

;

-- Primary Key for blog_post: id

-- Indexes for blog_post:
--   blog_post_slug_key: slug (unique: True)


-- Table: contact

CREATE TABLE contact (
	id SERIAL NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	email VARCHAR(120) NOT NULL, 
	subject VARCHAR(200), 
	message TEXT NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	is_read BOOLEAN, 
	CONSTRAINT contact_pkey PRIMARY KEY (id)
)

;

-- Primary Key for contact: id


-- Table: service

CREATE TABLE service (
	id SERIAL NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	slug VARCHAR(100) NOT NULL, 
	description TEXT NOT NULL, 
	short_description VARCHAR(200), 
	price DOUBLE PRECISION NOT NULL, 
	duration INTEGER NOT NULL, 
	image_url VARCHAR(256), 
	is_available BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT service_pkey PRIMARY KEY (id), 
	CONSTRAINT service_slug_key UNIQUE (slug)
)

;

-- Primary Key for service: id

-- Indexes for service:
--   service_slug_key: slug (unique: True)


-- Table: booking

CREATE TABLE booking (
	id SERIAL NOT NULL, 
	service_id INTEGER NOT NULL, 
	customer_name VARCHAR(100) NOT NULL, 
	customer_email VARCHAR(120) NOT NULL, 
	customer_phone VARCHAR(20), 
	booking_date DATE NOT NULL, 
	booking_time TIME WITHOUT TIME ZONE NOT NULL, 
	notes TEXT, 
	status VARCHAR(20), 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT booking_pkey PRIMARY KEY (id), 
	CONSTRAINT booking_service_id_fkey FOREIGN KEY(service_id) REFERENCES service (id)
)

;

-- Primary Key for booking: id

-- Foreign Keys for booking:
--   service_id -> service.id


-- Table: cart_item

CREATE TABLE cart_item (
	id SERIAL NOT NULL, 
	session_id VARCHAR(64) NOT NULL, 
	service_id INTEGER NOT NULL, 
	quantity INTEGER, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT cart_item_pkey PRIMARY KEY (id), 
	CONSTRAINT cart_item_service_id_fkey FOREIGN KEY(service_id) REFERENCES service (id)
)

;

-- Primary Key for cart_item: id

-- Foreign Keys for cart_item:
--   service_id -> service.id


-- Table: order

CREATE TABLE "order" (
	id SERIAL NOT NULL, 
	order_number VARCHAR(20) NOT NULL, 
	customer_name VARCHAR(100) NOT NULL, 
	customer_email VARCHAR(120) NOT NULL, 
	customer_phone VARCHAR(20), 
	total_amount DOUBLE PRECISION NOT NULL, 
	status VARCHAR(20), 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT order_pkey PRIMARY KEY (id), 
	CONSTRAINT order_order_number_key UNIQUE (order_number)
)

;

-- Primary Key for order: id

-- Indexes for order:
--   order_order_number_key: order_number (unique: True)


-- Table: order_item

CREATE TABLE order_item (
	id SERIAL NOT NULL, 
	order_id INTEGER NOT NULL, 
	service_id INTEGER NOT NULL, 
	service_name VARCHAR(100) NOT NULL, 
	price DOUBLE PRECISION NOT NULL, 
	quantity INTEGER, 
	CONSTRAINT order_item_pkey PRIMARY KEY (id), 
	CONSTRAINT order_item_order_id_fkey FOREIGN KEY(order_id) REFERENCES "order" (id), 
	CONSTRAINT order_item_service_id_fkey FOREIGN KEY(service_id) REFERENCES service (id)
)

;

-- Primary Key for order_item: id

-- Foreign Keys for order_item:
--   order_id -> order.id
--   service_id -> service.id


-- Table: django_migrations

CREATE TABLE django_migrations (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (INCREMENT BY 1 START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 NO CYCLE), 
	app VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	applied TIMESTAMP WITH TIME ZONE NOT NULL, 
	CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
)

;

-- Primary Key for django_migrations: id


-- Table: django_content_type

CREATE TABLE django_content_type (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY (INCREMENT BY 1 START WITH 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 NO CYCLE), 
	app_label VARCHAR(100) NOT NULL, 
	model VARCHAR(100) NOT NULL, 
	CONSTRAINT django_content_type_pkey PRIMARY KEY (id), 
	CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model)
)

;

-- Primary Key for django_content_type: id

-- Indexes for django_content_type:
--   django_content_type_app_label_model_76bd3d3b_uniq: app_label, model (unique: True)


-- Table: auth_permission

CREATE TABLE auth_permission (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY (INCREMENT BY 1 START WITH 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 NO CYCLE), 
	name VARCHAR(255) NOT NULL, 
	content_type_id INTEGER NOT NULL, 
	codename VARCHAR(100) NOT NULL, 
	CONSTRAINT auth_permission_pkey PRIMARY KEY (id), 
	CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY(content_type_id) REFERENCES django_content_type (id) DEFERRABLE INITIALLY DEFERRED, 
	CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename)
)

;

-- Primary Key for auth_permission: id

-- Foreign Keys for auth_permission:
--   content_type_id -> django_content_type.id

-- Indexes for auth_permission:
--   auth_permission_content_type_id_2f476e4b: content_type_id (unique: False)
--   auth_permission_content_type_id_codename_01ab375a_uniq: content_type_id, codename (unique: True)


-- Table: auth_group

CREATE TABLE auth_group (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY (INCREMENT BY 1 START WITH 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 NO CYCLE), 
	name VARCHAR(150) NOT NULL, 
	CONSTRAINT auth_group_pkey PRIMARY KEY (id), 
	CONSTRAINT auth_group_name_key UNIQUE (name)
)

;

-- Primary Key for auth_group: id

-- Indexes for auth_group:
--   auth_group_name_a6ea08ec_like: name (unique: False)
--   auth_group_name_key: name (unique: True)


-- Table: auth_group_permissions

CREATE TABLE auth_group_permissions (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (INCREMENT BY 1 START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 NO CYCLE), 
	group_id INTEGER NOT NULL, 
	permission_id INTEGER NOT NULL, 
	CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id), 
	CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY(permission_id) REFERENCES auth_permission (id) DEFERRABLE INITIALLY DEFERRED, 
	CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY(group_id) REFERENCES auth_group (id) DEFERRABLE INITIALLY DEFERRED, 
	CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id)
)

;

-- Primary Key for auth_group_permissions: id

-- Foreign Keys for auth_group_permissions:
--   permission_id -> auth_permission.id
--   group_id -> auth_group.id

-- Indexes for auth_group_permissions:
--   auth_group_permissions_group_id_b120cbf9: group_id (unique: False)
--   auth_group_permissions_group_id_permission_id_0cd325b0_uniq: group_id, permission_id (unique: True)
--   auth_group_permissions_permission_id_84c5c92e: permission_id (unique: False)


-- Table: auth_user_groups

CREATE TABLE auth_user_groups (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (INCREMENT BY 1 START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 NO CYCLE), 
	user_id INTEGER NOT NULL, 
	group_id INTEGER NOT NULL, 
	CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id), 
	CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY(group_id) REFERENCES auth_group (id) DEFERRABLE INITIALLY DEFERRED, 
	CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY(user_id) REFERENCES auth_user (id) DEFERRABLE INITIALLY DEFERRED, 
	CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id)
)

;

